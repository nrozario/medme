{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tasha/medme/src/components/Main/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Student from \"../Student\";\nimport \"./Main.css\";\n\nconst Main = () => {\n  _s();\n\n  const [students, setStudents] = useState([]);\n  const [studentVisiblity, setStudentVisibility] = useState([]);\n  const [nameFilter, setNameFilter] = useState(\"\");\n  const [tagFilter, setTagFilter] = useState(\"\");\n  useEffect(() => {\n    fetch(\"https://www.hatchways.io/api/assessment/students\").then(response => response.json()).then(data => {\n      if (data.students) {\n        setStudents(data.students);\n\n        for (const student of students) {\n          setStudentVisibility += false;\n        }\n\n        console.log(studentVisiblity);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"white\",\n      width: \"80%\",\n      marginLeft: \"10%\",\n      height: \"80%\",\n      marginTop: \"5%\",\n      position: \"absolute\",\n      // border: \"1px solid black\",\n      overflow: \"scroll\",\n      borderRadius: \"10px\",\n      boxShadow: \"0 0 4px rgb(220, 220, 220)\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name-input\",\n        value: nameFilter,\n        onChange: event => setNameFilter(event.target.value),\n        placeholder: \"Search by name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"tag-input\",\n        value: tagFilter,\n        onChange: event => setTagFilter(event.target.value),\n        placeholder: \"Search by tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), students.filter(student => student.firstName.toUpperCase().startsWith(nameFilter.toUpperCase()) || student.lastName.toUpperCase().startsWith(nameFilter.toUpperCase())).map((student, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [index !== 0 && /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          border: \"1px solid rgb(240, 240, 240)\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Student, {\n        info: student\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"naul2XJj1KAqmwjdJ8Yj7ZV1S/w=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/tasha/medme/src/components/Main/index.js"],"names":["React","useState","useEffect","Student","Main","students","setStudents","studentVisiblity","setStudentVisibility","nameFilter","setNameFilter","tagFilter","setTagFilter","fetch","then","response","json","data","student","console","log","backgroundColor","width","marginLeft","height","marginTop","position","overflow","borderRadius","boxShadow","event","target","value","filter","firstName","toUpperCase","startsWith","lastName","map","index","border"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Student from \"../Student\";\nimport \"./Main.css\";\n\nconst Main = () => {\n  const [students, setStudents] = useState([]);\n  const [studentVisiblity, setStudentVisibility] = useState([]);\n  const [nameFilter, setNameFilter] = useState(\"\");\n  const [tagFilter, setTagFilter] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"https://www.hatchways.io/api/assessment/students\")\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.students) {\n          setStudents(data.students);\n          for (const student of students) {\n            setStudentVisibility += false;\n          }\n          console.log(studentVisiblity);\n        }\n      });\n  }, []);\n  return (\n    <div\n      style={{\n        backgroundColor: \"white\",\n        width: \"80%\",\n        marginLeft: \"10%\",\n        height: \"80%\",\n        marginTop: \"5%\",\n        position: \"absolute\",\n        // border: \"1px solid black\",\n        overflow: \"scroll\",\n        borderRadius: \"10px\",\n        boxShadow: \"0 0 4px rgb(220, 220, 220)\",\n      }}\n    >\n      <form>\n        <input\n          type=\"text\"\n          id=\"name-input\"\n          value={nameFilter}\n          onChange={(event) => setNameFilter(event.target.value)}\n          placeholder=\"Search by name\"\n        />\n        <input\n          type=\"text\"\n          id=\"tag-input\"\n          value={tagFilter}\n          onChange={(event) => setTagFilter(event.target.value)}\n          placeholder=\"Search by tags\"\n        />\n      </form>\n      {students\n        .filter(\n          (student) =>\n            student.firstName\n              .toUpperCase()\n              .startsWith(nameFilter.toUpperCase()) ||\n            student.lastName.toUpperCase().startsWith(nameFilter.toUpperCase())\n        )\n        .map((student, index) => (\n          <div>\n            {index !== 0 && (\n              <hr style={{ border: \"1px solid rgb(240, 240, 240)\" }} />\n            )}\n            <Student info={student} />\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}